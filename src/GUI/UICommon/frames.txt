Get tree (Client -> Server)
Action : request the XML tree

<ClientServerXML>
  <getTree/>
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Add node (Client -> Server)
Action : add a child node to a node

<ClientServerXML>
  <addNode path="/path/to/parent" name="nodeName" type="concreteType" 
           abstype="abstractType" />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Rename node (Client -> Server)
Action : rename a node

<ClientServerXML>
  <renameNode path="/path/to/node" name="newName" />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Delete node (Client -> Server)
Action : delete a node

<ClientServerXML>
  <deleteNode path="/path/to/node" />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Modify node (Client -> Server)
Action : add/modify options of a node

Note : for the moment all existing options (modified or not) are set between
modOptions tags. This will be fixed in the future. New options are set between
addOptions tags. If there is no new options, there is no addOptions tag. It
will be the same in the future for modOptions tag.

<ClientServerXML>
  <modifyNode path="/path/to/node">
    <modOptions>
      (modified options)
    </modOptions>
    <addOptions>
      (new options)
    </addOptions>
  </modifyNode>
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Get abstract types (Client -> Server)
Action : request abstract types list for a specified type

<ClientServerXML>
  <getAbstractTypes typeName="typeName" />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Get concrete types (Client -> Server)
Action : request concrete types list for a specified abstract type

<ClientServerXML>
  <getConcreteTypes typeName="abstractTypeName" />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Open directory (Client -> Server)
Action : open a directory on the server, read it and send its contents

<ClientServerXML>
  <openDir path="/path/to/dir"/>
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Open file (Client -> Server)
Action : Open a case file

<ClientServerXML>
  <openFile filename="filename" />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Shutdown server (Client -> Server)
Action : shutdown the server

<ClientServerXML>
  <shutdownServer />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Run simulation (Client -> Server)
Action : launch the simulation

<ClientServerXML>
  <runSimulation />
</ClientServerXML>


---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------

Tree (Server -> Client)
Action : Send the tree

<ClientServerXML>
  <tree>
    (tree)
  </tree>
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Message (Server -> Client)
Action : Send a message

<ClientServerXML>
  <message value="Message text" />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Error (Server -> Client)
Action : Send a message the describes an error

<ClientServerXML>
  <error value="Error message" />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Abstract types (Server -> Client)
Action : Send abstract types list 

<ClientServerXML>
  <abstractTypes typeName="typeName" typesList="type1, type2, ..." />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Concrete types (Server -> Client)
Action : Send concrete types list

<ClientServerXML>
  <concreteTypes typeName="typeName" typesList="type1, type2, ..." />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Directory contents(Server -> Client)
Action : Send a directory contents

<ClientServerXML>
  <dirContent path="/path/to/dir" dirs="dir1*dir2*dir3..." 
files="file1*file2*file3..." />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Acknowledgement (Server -> Client)
Action : indicate that the specified command (specified by the 
type of its frame) succeeded

<ClientServerXML>
  <ack type="typeToAck" />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Non-acknowledgement (Server -> Client)
Action : indicate that the specified command (specified by the 
type of its frame) failed

<ClientServerXML>
  <nack type="typeToAck" />
</ClientServerXML>

---------------------------------------------------------------
---------------------------------------------------------------

Simulation running (Server -> Client)
Action : indicate that the simulation is running. Used to 
notify a new client that a simulation is already running.

<ClientServerXML>
  <nack type="typeToNack" />
</ClientServerXML>
