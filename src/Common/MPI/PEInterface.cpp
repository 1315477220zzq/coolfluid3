#include "Common/MPI/PEInterface.hpp"

namespace CF {
  namespace Common  {

////////////////////////////////////////////////////////////////////////////////

PEInterface::PEInterface(int argc, char** args) : m_environment(argc, args) {
  PEInterface::PEInterface();
}

////////////////////////////////////////////////////////////////////////////////

PEInterface::PEInterface(){
  m_current_status=WorkerStatus::NOT_RUNNING;
}

////////////////////////////////////////////////////////////////////////////////

PEInterface::~PEInterface () {
}

////////////////////////////////////////////////////////////////////////////////

PEInterface& PEInterface::getInstance () {
  static PEInterface pe_instance;
  return pe_instance;
}

////////////////////////////////////////////////////////////////////////////////

void PEInterface::init(int argc, char** args) {
  mpi::environment(argc,args); // does it only if it is not initialized already
  mpi::communicator();
}

////////////////////////////////////////////////////////////////////////////////

bool PEInterface::is_init(){
  return m_environment.initialized();
}

////////////////////////////////////////////////////////////////////////////////

void PEInterface::finalize() {
  //mpi::environment::~environment();
}

////////////////////////////////////////////////////////////////////////////////

void PEInterface::change_status(WorkerStatus::Type status) {
  cf_assert ( WorkerStatus::Convert::is_valid(status) );
  m_current_status = status;
}

////////////////////////////////////////////////////////////////////////////////

WorkerStatus::Type PEInterface::status() {
  return m_current_status;
}

////////////////////////////////////////////////////////////////////////////////

  }  // namespace common
} // namespace CF
