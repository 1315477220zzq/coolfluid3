# be totally unforgiving for exceptions and assertions (batch)
configure //Root/Environment \
  assertion_to_exception:bool=false \
  exception_outputs:bool=true \
  exception_backtrace:bool=true \
  exception_aborts:bool=true

call //Root/Libraries/load_libraries \
     libs:array[uri]=file:@coolfluid_DSO_DIR@/libcoolfluid_rdm_scalar

create Wizard CF.RDM.Core.SteadyExplicit

# create a scalar advection model
call Wizard/create_model \
     ModelName:string=model \
     PhysicalModel:string=Burgers2D

# load the mesh
call //Root/model/Domain/load_mesh \
     file:uri=file:square1x1-tg-p2-2kn.msh \
     name:string=mesh

# configure solver
cd //Root/model/Solver

configure ./ domain:uri=cpath://Root/model/Domain
configure ./ mesh:uri=cpath://Root/model/Domain/mesh

configure time_stepping cfl:real=1.0
configure time_stepping MaxIter:unsigned=100

# create boundary term

call create_boundary_term Name:string=INLET \
     Type:string=CF.RDM.Core.BcDirichlet \
     Regions:array[uri]=\
//Root/model/Domain/mesh/topology/bottom,\
//Root/model/Domain/mesh/topology/left,\
//Root/model/Domain/mesh/topology/right

configure compute_boundary_terms/INLET functions:array[string]=1.5-2.0*x

# create domain term

call create_domain_term Name:string=INTERNAL \
     Type:string=CF.RDM.Schemes.CSysLDA \
     Regions:array[uri]=//Root/model/Domain/mesh/topology

# write initial solution

create tec_writer CF.Mesh.Tecplot.CWriter

configure tec_writer fields:array[uri]=//Root/model/Domain/mesh/solution
configure tec_writer file:uri=solution.init.plt
configure tec_writer mesh:uri=//Root/model/Domain/mesh

create msh_writer CF.Mesh.Gmsh.CWriter

configure msh_writer fields:array[uri]=//Root/model/Domain/mesh/solution
configure msh_writer file:uri=solution.init.msh
configure msh_writer mesh:uri=//Root/model/Domain/mesh

call tec_writer/write_mesh
call msh_writer/write_mesh

# solve

call solve

# write final solution

configure tec_writer file:uri=solution.plt
configure msh_writer file:uri=solution.msh

call tec_writer/write_mesh
call msh_writer/write_mesh
